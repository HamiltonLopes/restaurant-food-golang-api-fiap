// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: payments.sql

package fiapRestaurantDb

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getOrderIdByExternalReferenceAndMethod = `-- name: GetOrderIdByExternalReferenceAndMethod :one
SELECT order_id
FROM payments
WHERE external_reference = $1 AND method = $2
`

type GetOrderIdByExternalReferenceAndMethodParams struct {
	ExternalReference pgtype.Text
	Method            string
}

func (q *Queries) GetOrderIdByExternalReferenceAndMethod(ctx context.Context, arg GetOrderIdByExternalReferenceAndMethodParams) (int32, error) {
	row := q.db.QueryRow(ctx, getOrderIdByExternalReferenceAndMethod, arg.ExternalReference, arg.Method)
	var order_id int32
	err := row.Scan(&order_id)
	return order_id, err
}

const updateOrderPaymentStatus = `-- name: UpdateOrderPaymentStatus :exec
UPDATE payments
SET status = $3
WHERE external_reference = $1 AND method = $2
`

type UpdateOrderPaymentStatusParams struct {
	ExternalReference pgtype.Text
	Method            string
	Status            pgtype.Text
}

func (q *Queries) UpdateOrderPaymentStatus(ctx context.Context, arg UpdateOrderPaymentStatusParams) error {
	_, err := q.db.Exec(ctx, updateOrderPaymentStatus, arg.ExternalReference, arg.Method, arg.Status)
	return err
}

const updateOrderStatus = `-- name: UpdateOrderStatus :exec
UPDATE orders
SET status = $2
WHERE id = $1
`

type UpdateOrderStatusParams struct {
	ID     int32
	Status pgtype.Text
}

func (q *Queries) UpdateOrderStatus(ctx context.Context, arg UpdateOrderStatusParams) error {
	_, err := q.db.Exec(ctx, updateOrderStatus, arg.ID, arg.Status)
	return err
}
